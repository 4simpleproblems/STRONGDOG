name: Upload Website to Cloudflare R2

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    if: github.event.repository.fork == false && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Collect Changed Files
        shell: bash
        run: |
          mkdir -p changed

          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "No previous commit found; copying entire directory excluding unwanted files."
            rsync -av \
              --exclude='.git' \
              --exclude='.github' \
              --exclude='.vscode' \
              --exclude='.gitattributes' \
              --exclude='.gitignore' \
              ./ changed/
          else
            echo "Detecting files changed between ${{ github.event.before }} and ${{ github.sha }}:"
            echo "All changes (with status):"
            git diff --name-status "${{ github.event.before }}" "${{ github.sha }}"
            git diff --name-only -z --diff-filter=AMR "${{ github.event.before }}" "${{ github.sha }}" > changed_files.txt
            
            while IFS= read -r -d '' file; do
              if [ -f "$file" ]; then
                echo "Copying '$file' to changed/$file"
                mkdir -p "changed/$(dirname "$file")"
                cp "$file" "changed/$file"
              else
                echo "File '$file' does not exist, skipping."
              fi
            done < <(cat changed_files.txt)
          fi

      - name: List Changed Files
        shell: bash
        run: |
          echo "Files in changed/ directory:"
          find changed -type f

      - name: Remove Unwanted Files from Changed Directory
        shell: bash
        run: |
          rm -rf changed/.git changed/.github changed/.vscode
          rm -f changed/.gitattributes changed/.gitignore

      - name: Upload Changed Files to Cloudflare R2
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.CLOUDFLARE_R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.CLOUDFLARE_R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.CLOUDFLARE_R2_BUCKET }}
          source-dir: './changed'
          destination-dir: './'
          output-file-url: true
          multipart-size: 100
          max-retries: 5
          multipart-concurrent: true
          keep-file-fresh: false